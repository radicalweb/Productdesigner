<?php
	$objectManager = \Magento\Framework\App\ObjectManager::getInstance();
	$customerObj = $objectManager->create('\Magento\Customer\Model\Session');
	$fileSystem = $objectManager->create('\Magento\Framework\Filesystem');
	$mediaPath = $fileSystem->getDirectoryRead(\Magento\Framework\App\Filesystem\DirectoryList::MEDIA)->getAbsolutePath();
	$storeManager = $objectManager->get('\Magento\Store\Model\StoreManagerInterface');
	$baseUrl = $storeManager->getStore()->getBaseUrl();
	$mediaUrl = $storeManager->getStore()->getBaseUrl(\Magento\Framework\UrlInterface::URL_TYPE_MEDIA);
	
	$json = array();
	$price = array();
	$priceSizes = array();
	$tierPrices = array();
	$savedSizes = '';
	$workspace = "";
	$loadSaved = false;


	$productid = $this->getRequest()->getParam('workspace');
	if($this->getRequest()->getParam('id') != ""){
		$productid = $this->getRequest()->getParam('id');
	}
	$savedColor = '';
	if(isset($_POST['saveId']) && $_POST['saveId'] != ""){
		$savedId = $_POST['saveId'];
		$customer = $customerObj->isLoggedIn() ? $customerObj->getCustomer() : null;
//		if($customer){
//			$customerId = $customer->getId();
			$saveObject = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Saved\Collection')
				->addFieldToFilter('connect_id', $savedId)
				->getFirstItem();
			$saveCustomerId = $saveObject->getCustomerId();
//			if($customerId == $saveCustomerId){
				$productid = $saveObject->getProductId();
				$loadSaved = true;
				$savedColor = $saveObject->getColor();
				$savedDruktype = $saveObject->getDruktype();
				$savedSizes = $saveObject->getSizes();
				$connectId = $saveObject->getConnectId();
				$savedData = array('color' => $savedColor, 'druktype' => $savedDruktype, 'sizes' => $savedSizes);
				$savedItems = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Saved\Collection')
					->addFieldToFilter('connect_id', $savedId);
				$jsonData = array();
				foreach($savedItems as $item){
					$label = $item->getLabel();
					$jsonData[$label] = $item->getJson();
				}
				$savedData['json'] = $jsonData;
//			}
//		}
	}
	$product = $objectManager->create('\Magento\Catalog\Model\Product')->load($productid);
	$productprice = $product->getFinalPrice();

	$workspace .= '<input type="hidden" id="productid" value="'.$productid.'" />';
	$workspace .= '<input type="hidden" id="pd_price" value="'.$productprice.'" />';
	$dropareas = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Products\Collection')
		->addFieldToFilter('product_id', $productid);
	$labels = str_replace(' ', '_', $dropareas->getColumnValues('label'));
	$colors = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Colorimages\Collection')
		->addFieldToFilter('product_id', $productid);
	$colorcodes = array_unique($objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Colorimages\Collection')
		->addFieldToFilter('product_id', $productid)
		->getColumnValues('kleurcode'));
	$sizes = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Sizes\Collection')
		->addFieldToFilter('product_id', $productid);
	$druktypehtml = "";
	$druktypes = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Printingquality\Collection')
		->addFieldToFilter('product_id', $productid);
	if($druktypes->count() > 0){
		$druktypehtml .= 'Printing quality:<br />';
		$druktypehtml .= '<select name="druktype" class="required-entry">';
		$druktypehtml .= '<option value="" price="">'.__('-- Please Select --').'</option>';
		foreach($druktypes as $item){
			$druktypehtml .= '<option value="'.$item['name'].'" price="'.$item['meerprijs'].'">'.$item['name'].'</option>';
		}
		$druktypehtml .= '</select>';
	}
	//$pdoptions = '<form id="pd-product-options">'.$druktypehtml.Mage::helper("ShirtWorld_ShirtDesigner")->getProductOptionsHtml(Mage::getModel("catalog/product")->load($productid)).'</form>';
	$pdoptions = '';

	// Load Workspaces
	$labelcount = 0;
	$jsondropareas = array();
	foreach($labels as $label){
		$droparea = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Products\Collection')
			->addFieldToFilter('product_id', $productid)
			->addFieldToFilter('label', $label)
			->getFirstItem();

		// Get canvas coordinates
		$x1 = $droparea['x1'];
		$x2 = $droparea['x2'];
		$y1 = $droparea['y1'];
		$y2 = $droparea['y2'];
		$width = $x2 - $x1;
		$height = $y2 - $y1;
		if(file_exists($mediaPath.'productdesigner/overlayimgs/'.$droparea['overlayimage'])){
			$overlayimageurl = $mediaUrl.'productdesigner/overlayimgs/'.$droparea['overlayimage'];
		} else {
			$overlayimageurl = $mediaUrl.'productdesigner/m1_overlayimgs/'.$droparea['overlayimage'];
		}
		$useOverlay = $droparea['use_overlay'];
		$surcharge = $droparea['surcharge'];

		if($labelcount == 0){
			$active = '';
		} else {
			$active = 'style="display:none;"';
		}

		// Load color attributes
		if($color = $this->getRequest()->getParam('color') || $savedColor != ''){
			if($savedColor != ''){
				$color = $savedColor;
			}
			$colorobject = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Colorimages\Collection')
				->addFieldToFilter('product_id', $productid)
				->addFieldToFilter('label', $label)
				->addFieldToFilter('kleurcode', $color)
				->getFirstItem();
			$color = $colorobject['kleurcode'];
			$colormoreprice = $colorobject['meerprijs'];
			$price['color'] = $colormoreprice;
		} else {
			$colorobject = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Colorimages\Collection')
				->addFieldToFilter('product_id', $productid)
				->addFieldToFilter('label', $label)
				->getFirstItem();
			$color = $colorobject['kleurcode'];
			$colormoreprice = $colorobject['meerprijs'];
			$price['color'] = $colormoreprice;
		}

		// Get image
		if(!empty($colorobject)){
			$image = $colorobject['imgurl'];
			if(file_exists($mediaPath.'productdesigner/color_img/'.$image)){
				$imageurl = $mediaUrl.'productdesigner/color_img/'.$image;
			} else {
				$imageurl = $mediaUrl.'productdesigner/m1_color_img/'.$image;
			}
		} else {
			$image = utf8_decode($droparea['image']);
			if(file_exists($mediaPath.'productdesigner/sideimages/'.$image)){
				$imageurl = $mediaUrl.'productdesigner/sideimages/'.$image;
			} else {
				$imageurl = $mediaUrl.'productdesigner/m1_sideimages/'.$image;
			}
		}

		$jsondropareas[] = array('label' => $label, 'x1' => $x1, 'x2' => $x2, 'y1' => $y1, 'y2' => $y2, 'width' => $width, 'height' => $height, 'image' => $imageurl, 'overlayimage' => $overlayimageurl, 'use_overlay' => $useOverlay, 'surcharge' => $surcharge);

		$workspace .= '<div class="canvas" id="canvas-'.utf8_decode($label).'" '.$active.'>';
		$workspace .= '<img src="'.utf8_decode($imageurl).'" id="colorimage-'.utf8_decode($label).'" class="colorimage" />';
		$workspace .= '<div class="droparea" id="droparea-'.utf8_decode($label).'" style="width:'.$width.'px; height:'.$height.'px; margin-left:'.$x1.'px; margin-top:'.$y1.'px;"></div>';
		$workspace .= '</div>';

		// Higher label count for active workspace
		$labelcount++;
	}

	// Load Colors
	$colordata = "";
	foreach($colorcodes as $color){
		$colordata .= '<span class="colorpick" style="background:'.$color.';"></span>';
	}

	// Load Sizes
	$sizesdata = "";
	foreach($sizes as $size){
		$name = str_replace(' ', '_', $size['name']);
		$meerprijs = $size['meerprijs'];
		$priceSizes[$name] = $meerprijs;
		if($savedSizes != ""){
			$items = explode(',', $savedSizes);
			foreach($items as $item){
				$sizeItem = explode(':', $item);
				if($sizeItem[0] == $name){
					$value = $sizeItem[1];
				}
			}
		} else {
			$value = 0;
		}
		$sizesdata .= '<span class="sizecounter">'.$name.':</span><input class="spinner" id="'.$name.'" name="'.$name.'" value="'.$value.'" /><br />';
	}

	// Load textcolors
	$textcolors = explode(',', $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Textcolors\Collection')
		->addFieldToFilter('product_id', $productid)
		->getFirstItem()
		->getColors()
	);

	// Load templates
	$templatesData = array();
	$templates = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Templates\Collection')
		->addFieldToFilter('product_id', $productid);
	foreach($templates as $template){
		$connectId = $template['connect_id'];
		$templatesData[] = array(
			'label' => $template['label'],
			'json' => $template['json'],
			'connectid' => $connectId
		);
	}

	// Load default template
	$defaultTemplates = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Templates\Collection')
		->addFieldToFilter('product_id', $productid)
		->addFieldToFilter('autoload', '1');
	$defaultTemplateData = array();
	if(count($defaultTemplates) > 0){
		foreach($defaultTemplates as $template){
			$defaultTemplateData[] = array(
				'label' => $template['label'],
				'json' => $template['json'],
				'connectid' => $template['connect_id']
			);
		}
	} else {
		$defaultTemplateData = '';
	}

	// Load Tier Prices
	$productTierPrices = $product->getTierPrice();
	$websiteId = $storeManager->getWebsite()->getId();
	$groupId = $customerObj->getCustomerGroupId();
	foreach($productTierPrices as $tierPrice){
		if(($tierPrice['website_id'] == 0 || $tierPrice['website_id'] == $websiteId)
			&& ($tierPrice['cust_group'] == 32000 || $tierPrice['cust_group'] == 0 || $tierPrice['cust_group'] == $groupId)
		){
			$tierPrices[] = array('qty' => $tierPrice['price_qty'], 'price' => $tierPrice['price']);
		}
	}

	$price['defaultPrice'] = $product->getFinalPrice();
	//removed by Remco MV 04-10-2013
	/*if($_POST['quoteItemId'] != ''){
		$quoteItem = Mage::getModel("sales/quote_item")->load($_POST['quoteItemId']);
		$price['defaultPrice'] = $quoteItem->getPrice();
	}*/

	$json['workspace'] = utf8_encode($workspace);
	$json['dropareas'] = $jsondropareas;
	$json['pdoptions'] = utf8_encode($pdoptions);
	$json['colors'] = utf8_encode($colordata);
	$json['priceSizes'] = $priceSizes;
	$json['sizes'] = utf8_encode($sizesdata);
	$json['textcolors'] = $textcolors;
	$json['templates'] = $templatesData;
	$json['defaulttemplate'] = $defaultTemplateData;
	$json['price'] = $price;
	$json['tierprices'] = $tierPrices;
	$json['productname'] = $product->getName();
	if($loadSaved == true){
		$json['saved'] = $savedData;
	} else {
		$json['saved'] = '';
	}
	$json = json_encode($json);
	echo $json;