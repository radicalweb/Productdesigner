<?php
$objectManager = \Magento\Framework\App\ObjectManager::getInstance();
$fileSystem = $objectManager->create('\Magento\Framework\Filesystem');
$mediaPath = $fileSystem->getDirectoryRead(\Magento\Framework\App\Filesystem\DirectoryList::MEDIA)->getAbsolutePath();
$storeManager = $objectManager->get('\Magento\Store\Model\StoreManagerInterface');
$baseUrl = $storeManager->getStore()->getBaseUrl();
$mediaUrl = $storeManager->getStore()->getBaseUrl(\Magento\Framework\UrlInterface::URL_TYPE_MEDIA);
$registry = $objectManager->get('Magento\Framework\Registry');
$productId = $registry->registry('product')->getId();
$product = $objectManager->create('Magento\Catalog\Model\Product')->load($productId);

$productprice = $product->getFinalPrice();
$dropareas = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Products\Collection')
	->addFieldToFilter('product_id', $productId)
	->addFieldToFilter('store_id', $storeManager->getStore()->getId());
if(count($dropareas->getData()) == 0){
	$dropareas = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Products\Collection')
		->addFieldToFilter('product_id', $productId)
		->addFieldToFilter('store_id', array('null' => true));
}
$labels = str_replace(' ', '_', $dropareas->getColumnValues('label'));
$colors = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Colorimages\Collection')
	->addFieldToFilter('product_id', $productId)
	->addFieldToFilter('store_id', $storeManager->getStore()->getId());
if(count($colors->getData()) == 0){
	$colors = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Colorimages\Collection')
		->addFieldToFilter('product_id', $productId)
		->addFieldToFilter('store_id', array('null' => true));
}
//$colorcodes = array_unique($objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Colorimages\Collection')->addFieldToFilter('product_id', $productId)->getColumnValues('kleurcode'));
$sizes = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Sizes\Collection')
	->addFieldToFilter('product_id', $productId)
	->addFieldToFilter('store_id', $storeManager->getStore()->getId());
if(count($sizes->getData()) == 0){
	$sizes = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Sizes\Collection')
		->addFieldToFilter('product_id', $productId)
		->addFieldToFilter('store_id', array('null' => true));
}

$savedData = array();
if(isset($_GET['saved']) && $_GET['saved'] != ""){
	$savedId = $_GET['saved'];
	$customerSession = $objectManager->get('Magento\Customer\Model\Session');
	$customer = $customerSession->isLoggedIn() ? $customerSession->getCustomer() : null;
//		if($customer){
//			$customerId = $customer->getId();
		$saveObject = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Saved\Collection')
			->addFieldToFilter('connect_id', $savedId)
			->setPageSize(1)
			->setCurPage(1)
			->load()
			->getFirstItem();
		$saveCustomerId = $saveObject->getCustomerId();
//			if($customerId == $saveCustomerId){
			$productid = $saveObject->getProductId();
			$loadSaved = true;
			$savedColor = $saveObject->getColor();
			$savedDruktype = $saveObject->getDruktype();
			$savedSizes = $saveObject->getSizes();
			$connectId = $saveObject->getConnectId();
			$savedData = array('color' => $savedColor, 'druktype' => $savedDruktype, 'sizes' => $savedSizes);
			$savedItems = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Saved\Collection')
				->addFieldToFilter('connect_id', $savedId)
				->setPageSize(3)
				->setCurPage(1)
				->load();
			$jsonData = array();
			foreach($savedItems as $item){
				$label = $item->getLabel();
				// Load json from file
				$jsonFilename = $item->getJson();
				$jsonFileLocation = $mediaPath.'productdesigner/json/'.$jsonFilename;
				$handle = fopen($jsonFileLocation, "r");
				$jsonContent = fread($handle, filesize($jsonFileLocation));
				fclose($handle);
				$jsonData[$label] = json_decode($jsonContent, true);
			}
			$savedData['json'] = $jsonData;
//			}
//		}
}

// $numberOfColumns = $objectManager->create('\Magento\Framework\App\Config\ScopeConfigInterface')->getValue('lm_productdesigner/lm_pd_settings/lm_pd_columns', \Magento\Store\Model\ScopeInterface::SCOPE_STORE);
$numberOfColumns = $objectManager->create('\Magento\Framework\App\Config\ScopeConfigInterface')->getValue('theme_settings/product_page/image_column', \Magento\Store\Model\ScopeInterface::SCOPE_STORE);
if(!$numberOfColumns > 0){
	$numberOfColumns = 5;
}
$columnPercentage = (100 / 12 * $numberOfColumns) - 1;
// $columnWidth = intval(1140 * $columnPercentage / 100);
$columnWidth = 626;
echo '<input type="hidden" id="number_of_columns" value="'.$numberOfColumns.'" />';
echo '<input type="hidden" id="column_width" value="'.$columnWidth.'" />';

// Load Workspaces
$labelcount = 0;
$jsondropareas = array();
$droparea = '';
$workspace = '';
$dataHtml = '';
$count = 0;
foreach($labels as $label){
	$droparea = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Products\Collection')
		->addFieldToFilter('product_id', $productId)
		->addFieldToFilter('label', $label)
		->addFieldToFilter('store_id', $storeManager->getStore()->getId())
		->setPageSize(1)
		->setCurPage(1)
		->load()
		->getFirstItem();
	if(empty($droparea->getData())){
		$droparea = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Products\Collection')
			->addFieldToFilter('product_id', $productId)
			->addFieldToFilter('label', $label)
			->addFieldToFilter('store_id', array('null' => true))
			->setPageSize(1)
			->setCurPage(1)
			->load()
			->getFirstItem();
	}


	// Get canvas coordinates
	//$scaleFactor = 1.129268292682927;
	//$scaleFactor = 1.134146341463415;
	$scaleFactor = $columnWidth / 410;
	
	$x1 = $droparea['x1'] * $scaleFactor;
	$x2 = $droparea['x2'] * $scaleFactor;
	$y1 = $droparea['y1'] * $scaleFactor;
	$y2 = $droparea['y2'] * $scaleFactor;
	$outputX1 = $droparea['output_x1'] * $scaleFactor;
	$outputX2 = $droparea['output_x2'] * $scaleFactor;
	$outputY1 = $droparea['output_y1'] * $scaleFactor;
	$outputY2 = $droparea['output_y2'] * $scaleFactor;
	$width = $x2 - $x1;
	$height = $y2 - $y1;

	$overlayimageurl = $mediaUrl.'productdesigner/overlayimgs/'.$droparea['overlayimage'];
	$imageResized = str_replace('.png', '_'.$columnWidth.'.png', $droparea['overlayimage']);
	$imageurlResized = $mediaPath.'productdesigner/overlayimgs/'.$imageResized;
	$overlayimageurl = $mediaUrl.'productdesigner/overlayimgs/'.$imageResized;
	if(file_exists($mediaPath.'productdesigner/overlayimgs/'.$droparea['overlayimage'])){
		if(!file_exists($imageurlResized)){
			$block = $objectManager->get('Laurensmedia\Productdesigner\Block\Index');
			$block->resize($columnWidth + 10, $imageurlResized, $mediaPath.'productdesigner/overlayimgs/'.$droparea['overlayimage']);
/*
			
			$rimage = $objectManager->get('Magento\Framework\Image\AdapterFactory')->create();
			$rimage->open($mediaPath.'productdesigner/overlayimgs/'.$droparea['overlayimage']);
			$rimage->constrainOnly(false);
			$rimage->keepAspectRatio(true);
			$rimage->keepFrame(true);
			$rimage->keepTransparency(true);
			$rimage->backgroundColor(array(255,255,255));
			$rimage->resize(410,410);
			$rimage->save($imageurlResized);
*/
		}
	} else {
		if(!file_exists($imageurlResized)){
			$imageResized = str_replace('.png', '_'.$columnWidth.'.png', $droparea['overlayimage']);
			$imageurlResized = $mediaPath.'productdesigner/overlayimgs_m1/'.$imageResized;
			$block = $objectManager->get('Laurensmedia\Productdesigner\Block\Index');
			$block->resize($columnWidth + 10, $imageurlResized, $mediaPath.'productdesigner/overlayimgs_m1/'.$droparea['overlayimage']);
		}
		$overlayimageurl = $mediaUrl.'productdesigner/overlayimgs_m1/'.$imageResized;
	}
	
	$useOverlay = $droparea['use_overlay'];
	$surcharge = $droparea['surcharge'];
	$surchargeTable = $droparea['surcharge_table'];
	
	$outputWidth = $droparea['outputwidth'];
	$outputHeight = $droparea['outputheight'];

	if($labelcount == 0){
		$active = '';
	} else {
		$active = 'style="display:none;"';
	}

	// Load color attributes
	if($color = $this->getRequest()->getParam('color') || (isset($savedColor) && $savedColor != '')){
		if($savedColor != ''){
			$color = $savedColor;
		}
		$colorobject = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Colorimages\Collection')
			->addFieldToFilter('product_id', $productId)
			->addFieldToFilter('label', $label)
			->addFieldToFilter('kleurcode', $color)
			->addFieldToFilter('store_id', $storeManager->getStore()->getId())
			->setPageSize(1)
			->setCurPage(1)
			->load()
			->getFirstItem();
		if(empty($colorobject->getData())){
			$colorobject = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Colorimages\Collection')
				->addFieldToFilter('product_id', $productId)
				->addFieldToFilter('label', $label)
				->addFieldToFilter('kleurcode', $color)
				->addFieldToFilter('store_id', array('null' => true))
				->setPageSize(1)
				->setCurPage(1)
				->load()
				->getFirstItem();
		}
		$color = $colorobject['kleurcode'];
		$colormoreprice = $colorobject['meerprijs'];
		$price['color'] = $colormoreprice;
	} else {
		$colorobject = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Colorimages\Collection')
			->addFieldToFilter('product_id', $productId)
			->addFieldToFilter('label', $label)
			->addFieldToFilter('store_id', $storeManager->getStore()->getId())
			->setPageSize(1)
			->setCurPage(1)
			->load()
			->getFirstItem();
		if(empty($colorobject->getData())){
			$colorobject = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Colorimages\Collection')
				->addFieldToFilter('product_id', $productId)
				->addFieldToFilter('label', $label)
				->addFieldToFilter('store_id', array('null' => true))
				->setPageSize(1)
				->setCurPage(1)
				->load()
				->getFirstItem();
		}
		$color = $colorobject['kleurcode'];
		$colormoreprice = $colorobject['meerprijs'];
		$price['color'] = $colormoreprice;
	}

	// Get image
	if(!empty($colorobject)){
		$image = $colorobject['imgurl'];
		$imageurl = $mediaUrl.'productdesigner/color_img/'.$image;
		$imageResized = str_replace('.png', '_'.$columnWidth.'.png', $image);
		$imageResized = str_replace('.jpg', '_'.$columnWidth.'.jpg', $imageResized);
		$imageurlResized = $mediaPath.'productdesigner/color_img/'.$imageResized;

		$imageurl = $mediaUrl.'productdesigner/color_img/'.$imageResized;
		if(file_exists($mediaPath.'productdesigner/color_img/'.$image)){
			if(!file_exists($imageurlResized)){
				$block = $objectManager->get('Laurensmedia\Productdesigner\Block\Index');
				$block->resize($columnWidth + 10, $imageurlResized, $mediaPath.'productdesigner/color_img/'.$image);
/*
				$rimage = $objectManager->get('Magento\Framework\Image\AdapterFactory')->create();
				$rimage->open($mediaPath.'productdesigner/color_img/'.$image);
				$rimage->constrainOnly(false);
				$rimage->keepAspectRatio(true);
				$rimage->keepFrame(true);
				$rimage->keepTransparency(true);
				$rimage->backgroundColor(array(255,255,255));
				$rimage->resize(410,410);
				$rimage->save($imageurlResized);
*/
			}
		} else {
			if(!file_exists($imageurlResized)){
				$imageResized = str_replace('.png', '_'.$columnWidth.'.png', $image);
				$imageurlResized = $mediaPath.'productdesigner/color_img_m1/'.$imageResized;
				$block = $objectManager->get('Laurensmedia\Productdesigner\Block\Index');
				$block->resize($columnWidth + 10, $imageurlResized, $mediaPath.'productdesigner/color_img_m1/'.$image);
			}
			$imageurl = $mediaUrl.'productdesigner/color_img_m1/'.$imageResized;
		}
	} else {
		$image = utf8_decode($droparea['image']);
		$imageurl = $mediaUrl.'productdesigner/sideimages/'.$image;
	}
	
	$outputPart = ($outputX2 - $outputX1) / 410;

	$jsonData = array('label' => $label, 'x1' => $x1, 'x2' => $x2, 'y1' => $y1, 'y2' => $y2, 'output_x1' => $outputX1, 'output_x2' => $outputX2, 'output_y1' => $outputY1, 'output_y2' => $outputY2, 'width' => $width, 'height' => $height, 'image' => $imageurl, 'overlayimage' => $overlayimageurl, 'use_overlay' => $useOverlay, 'surcharge' => $surcharge, 'surcharge_table' => $surchargeTable, 'outputwidth' => $outputWidth, 'outputheight' => $outputHeight, 'outputpart' => $outputPart);

	if($count == 0){
		$workspace .= '<div class="fpd-product" title="'.$label.'" data-thumbnail="'.str_replace(' ', '%20', $imageurl).'">';
		$workspace .= '<img src="'.str_replace(' ', '%20', $imageurl).'" title="Base" data-parameters=\'{"left": '.($columnWidth / 2).', "top": '.($columnWidth / 2).', "price": 20}\' />';
		$workspace .= '<img src="'.str_replace(' ', '%20', $overlayimageurl).'" title="Overlay" data-parameters=\'{"left": '.($columnWidth / 2).', "top": '.($columnWidth / 2).', "topped": true}\' />';
	} else {
		$workspace .= '<div class="fpd-product" title="'.$label.'" data-thumbnail="'.str_replace(' ', '%20', $imageurl).'">';
		$workspace .= '<img src="'.str_replace(' ', '%20', $imageurl).'" title="Base" data-parameters=\'{"left": '.($columnWidth / 2).', "top": '.($columnWidth / 2).', "price": 20}\' />';
		$workspace .= '<img src="'.str_replace(' ', '%20', $overlayimageurl).'" title="Overlay" data-parameters=\'{"left": '.($columnWidth / 2).', "top": '.($columnWidth / 2).', "topped": true}\' />';
		$workspace .= '</div>';
	}
	$dataHtml .= '<input type="hidden" class="canvas-json-data" data-label="'.$label.'" data-jsondata=\''.json_encode($jsonData).'\' />';
	$count++;

	// Higher label count for active workspace
	$labelcount++;
}
$workspace .= '</div>';

$fonts = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Fonts\Collection');
$groupId = $dropareas->getFirstItem()->getGroup();
$group = $objectManager->create('Laurensmedia\Productdesigner\Model\Groups')->load($groupId);
$groupFonts = explode(',', $group->getFonts());
$finalFonts = array();
foreach($fonts as $font){
	if(!in_array($font->getId(), $groupFonts)){
		continue;
	}
	$finalFonts[] = array(
		'name' => $font->getName(),
		'url' => $mediaUrl.'productdesigner_fonts/'.$font->getFontfamily().'.ttf'
	);
}

$productTierPrices = $product->getTierPrice();
$websiteId = $storeManager->getStore()->getWebsiteId();
$customerSession = $objectManager->get('Magento\Customer\Model\Session');
$groupId = $customerSession->getCustomerGroupId();
$tierPrices = array();

// Get discount percentage (catalog price rules)
$basePrice = $product->getPrice();
$finalPrice = $product->getFinalPrice();
if($basePrice > 0){
	$discountPercentage = 100 - round(($finalPrice / $basePrice) * 100);
} else {
	$discountPercentage = 0;
}

foreach($productTierPrices as $tierPrice){
	if(($tierPrice['website_id'] == 0 || $tierPrice['website_id'] == $websiteId)
		&& ($tierPrice['cust_group'] == 32000 || $tierPrice['cust_group'] == 0 || $tierPrice['cust_group'] == $groupId)
	){
		$tierPrice['price'] = (float)$tierPrice['price'] * (1 - ($discountPercentage / 100));
		$tierPrices[] = array('qty' => $tierPrice['price_qty'], 'price' => $tierPrice['price']);
	}
}
if($product->getData('bedrukbaar') == '0'){ return; }

$printingTech = $product->getAttributeText('technology');
if((is_array($printingTech) && in_array('engraving', $printingTech)) || $printingTech == 'engraving'){
	echo '<input type="hidden" id="is_engraving" value="true" />';
	if(is_array($printingTech) && in_array('engraving', $printingTech)){
		echo '<input type="hidden" id="engrave_both_sides" value="false" />';
	} else {
		echo '<input type="hidden" id="engrave_both_sides" value="true" />';
	}
	echo '<input type="hidden" id="disable_grayscale_filter" value="'.$product->getData('disable_grayscale_filter').'" />';
} else {
	echo '<input type="hidden" id="is_engraving" value="false" />';
}

$templates = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Templates\Collection')
	->addFieldToFilter('product_id', $product->getId());
$templateArray = array();
$layoutsArray = array();
$processedTemplates = array();
$autoloadTemplate = '';
foreach($templates as $template){
	$templateItems = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Templatedata\Collection')
		->addFieldToFilter('template_id', $template->getId());
	foreach($templateItems as $templateItem){
		$json = json_decode($templateItem['json'], true);
		$image = $mediaUrl.'productdesigner/templatethumbs/'.$template->getId().'-'.$templateItem['label'].'.png';
		$json['thumbnail'] = $image;
		if(!in_array($template->getId(), $processedTemplates)){
			$layoutsArray[] = $json;
		}
		$processedTemplates[] = $template->getId();
		
		$templateArray[$template->getId()][] = $templateItem->getData();
		if($template->getAutoload() == 1){
			$autoloadTemplate = $template->getId();
		}
	}
}

echo '<input type="hidden" id="edit_template_id" value="'.(isset($_GET['template_id']) ? $_GET['template_id'] : '').'" />';
echo '<input type="hidden" id="autoload_template" value="'.$autoloadTemplate.'" />';

if(isset($_GET['quoteitem']) && is_numeric($_GET['quoteitem']) && $_GET['quoteitem'] > 0){
	echo '<input type="hidden" id="isUpdateQuoteItem" value="'.$_GET['quoteitem'].'" />';
}
?>
<input type="hidden" id="enable_designer" value="<?php echo $product->getData('bedrukbaar'); ?>" />
<input type="hidden" id="store_id" value="<?php echo $storeManager->getStore()->getId(); ?>" />
<input type="hidden" id="disable_upload" value="<?php echo $product->getData('disable_upload'); ?>" />
<input type="hidden" id="disable_upload_for_second_side" value="<?php echo $product->getData('disable_upload_for_second_side'); ?>" />
<input type="hidden" id="disable_library" value="<?php echo $product->getData('disable_library'); ?>" />
<input type="hidden" id="disable_text" value="<?php echo $product->getData('disable_text'); ?>" />
<input type="hidden" id="productid" value="<?php echo $productId; ?>" />
<input type="hidden" id="productprice" value="<?php echo $productprice; ?>" />
<input type="hidden" id="baseurl" value="<?php echo $baseUrl; ?>" />
<input type="hidden" id="fonts" value='<?php echo json_encode($finalFonts); ?>' />
<input type="hidden" id="tierprices" value='<?php echo json_encode($tierPrices); ?>' />
<input type="hidden" id="saveddata" value='<?php echo json_encode($savedData); ?>' />
<input type="hidden" id="templates" value='<?php echo json_encode($templateArray); ?>' />
<input type="hidden" id="layouts" value='<?php echo json_encode($layoutsArray); ?>' />
<input type="hidden" id="fixed_printing_color" value="<?php echo $product->getData('fixed_printing_color'); ?>" />
<input type="hidden" id="no_image_uploaded_message" value="<?php echo __("No image has been uploaded. Are you sure you want to continue?"); ?>" />
<div class="canvas-designer-container" style="display:none;">
	
	<div class="gallery-active-image-container">
		
	</div>
	
	<div class="fpd-custom-layers-container">
		
	</div>
	
	<?php echo $dataHtml; ?>
	<div id="clothing-designer" class="fpd-container fpd-topbar fpd-tabs fpd-tabs-side fpd-top-actions-centered fpd-bottom-actions-centered  fpd-views-outside">
		<?php echo $workspace; ?>
	<!--
		<div class="fpd-product" title="Shirt Front" data-thumbnail="media/productdesigner/images/yellow_shirt/front/preview.png">
			<img src="media/productdesigner/images/yellow_shirt/front/base.png" title="Base" data-parameters='{"left": 325, "top": 329, "colors": "#d59211", "price": 20, "colorLinkGroup": "Base"}' />
			<img src="media/productdesigner/images/yellow_shirt/front/shadows.png" title="Shadow" data-parameters='{"left": 325, "top": 329}' />
			<img src="media/productdesigner/images/yellow_shirt/front/body.png" title="Hightlights" data-parameters='{"left": 322, "top": 137}' />
			<span title="Any Text" data-parameters='{"boundingBox": "Base", "left": 326, "top": 232, "zChangeable": true, "removable": true, "draggable": true, "rotatable": true, "resizable": true, "colors": "#000000"}' >Default Text</span>
		<div class="fpd-product" title="Shirt Back" data-thumbnail="media/productdesigner/images/yellow_shirt/back/preview.png">
			<img src="media/productdesigner/images/yellow_shirt/back/base.png" title="Base" data-parameters='{"left": 317, "top": 329, "colorLinkGroup": "Base", "price": 20}' />
			<img src="media/productdesigner/images/yellow_shirt/back/body.png" title="Hightlights" data-parameters='{"left": 333, "top": 119}' />
			  <img src="media/productdesigner/images/yellow_shirt/back/shadows.png" title="Shadow" data-parameters='{"left": 318, "top": 329}' />
		</div>
	-->
	</div>
	<!--    -->
		
	<div class="gallery-images-container">
		<div class="gallery-images">
			<?php
			$objectManager = \Magento\Framework\App\ObjectManager::getInstance();
			$productimages = $product->getMediaGalleryImages();
			foreach($productimages as $productimage):
				$imageHelper = $objectManager->get('\Magento\Catalog\Helper\Image');
				$thumbUrl = $imageHelper->init($product, 'product_page_image_small')
					->setImageFile($productimage->getFile())
					->constrainOnly(FALSE)
					->keepAspectRatio(TRUE)
					->keepFrame(FALSE)
					->resize(100, 100)
					->getUrl();
			?>
				<div class="gallery-image" style="background-image: url('<?php echo $thumbUrl; ?>');" data-url="<?php echo $productimage['url']; ?>"></div>
			<?php endforeach; ?>
		</div>
	</div>
		
	<div class="fpd-design">

	</div>
	<br />
	
	<div class="fpd-clearfix" style="margin-top: 30px;">
		<div class="api-buttons fpd-container fpd-left" <?php echo $product->isSaleable() ? '' : 'style="display:none;"'; ?>>
			<input type="number" class="fpd-qty qty" value="1" />
			<div class="qty-changer">
				<span class="qty-up">+</span>
				<span class="qty-down">-</span>
			</div>
			  <a href="#" id="checkout-button" class="button btn-cart">Hop, au panier</a>
		</div>
		<div class="fpd-right">
			<div class="price-box">
				<span class="regular-price">
					<span class="price badge badge-inverse"><span id="thsirt-price"></span> €</span>
					<span class="pd-item-price" style="display:block;clear:both;text-align: right;">
						<span class="pd-item-price-insert"></span> 
						<span>€ </span>
						<span> <?php echo __('par pièce');?></span>
					</span>
				</span>
			</div>
			<div class="shipping-price" style="text-align: right;"><?php echo __("Livraison"); ?>: <span></span></div>
		</div>
	</div>

<!--
	<p class="fpd-container">
		Only working on a webserver:<br />
		<span class="fpd-btn" id="save-image-php">Save image with php</span>
		<span class="fpd-btn" id="send-image-mail-php">Send image to mail</span>
	</p>
-->
</div>

<div class="pd-cart-progress-container">
	<div class="pd-cart-progress">
		<p><?php echo __('Passage de la creation au panier.<br /> merci de patienter');?>..</p>
	</div>
</div>

<?php
	$imageCategories = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Imagecategories\Collection');
	$images = $objectManager->create('Laurensmedia\Productdesigner\Model\ResourceModel\Images\Collection');
	$groupId = $dropareas->getFirstItem()->getGroup();
	$group = $objectManager->create('Laurensmedia\Productdesigner\Model\Groups')->load($groupId);
	$groupCats = explode(',', $group->getImageCategories());
	$finalArray = array();
	foreach($imageCategories as $cat){
		if(!in_array($cat->getId(), $groupCats)){
			continue;
		}
		$finalCat = array(
			'title' => $cat['label'],
			'designs' => array()
		);
		foreach($images as $image){
			$categories = explode(',', $image['categorie']);
			if(in_array($cat->getId(), $categories)){
				$imageLocation = str_replace('/thumbs', '', $mediaPath.'productdesigner_images/'.$image->getUrl());
				if(file_exists($imageLocation)){
					$finalCat['designs'][] = array(
						'source' => str_replace('/thumbs', '', $mediaUrl.'productdesigner_images/'.$image->getUrl()),
						'title' => str_replace("'", "", $image->getLabel()),
						'thumbnail' => $mediaUrl.'productdesigner_images/'.$image->getUrl(),
						'parameters' => array(
							'draggable' => true,
							'rotatable' => true,
							'resizable' => true,
							'zChangeable' => true,
							'autoSelect' => true,
							'removable' => true,
							'scale_factor' => $image['scale_factor'] ? $image['scale_factor'] : $cat['scale_factor'],
						)
					);
				} else {
					$finalCat['designs'][] = array(
						'source' => str_replace('/thumbs', '', $mediaUrl.'productdesigner/png/'.$image->getUrl()),
						'title' => str_replace("'", "", $image->getLabel()),
						'thumbnail' => $mediaUrl.'productdesigner/png/'.$image->getUrl(),
						'parameters' => array(
							'draggable' => true,
							'rotatable' => true,
							'resizable' => true,
							'zChangeable' => true,
							'autoSelect' => true,
							'removable' => true,
							'scale_factor' => $image['scale_factor'] ? $image['scale_factor'] : $cat['scale_factor'],
						)
					);
				}
			}
		}
		$finalCat['thumbnail'] = $finalCat['designs'][0]['thumbnail'];
		if($cat['is_background'] == 0 && $cat['is_frame'] == 0){
			$finalArray[] = $finalCat;
		}
	}
?>
<input type="hidden" id="designer_designs" value='<?php echo json_encode($finalArray); ?>' />

<!--- Save template -->
<?php
	if(isset($_GET['edit_template'])){
		$url = urldecode($_GET['edit_template']);
		$formKey = isset($_GET['formkey']) ? $_GET['formkey'] : '';
?>
<input type="hidden" id="editormode" value="true" />
<div class="button pd-make-upload-zone">
	<span class="button-text"><?php echo __('Make upload zone') ?></span>
</div>
<div class="button pd-make-fixed-position">
	<span class="button-text"><?php echo __('Make fixed position') ?></span>
</div>

<div class="button pd-savetemplate">
	<span class="button-text"><?php echo __('Save as a template') ?></span>
</div>
<script type="text/javascript">
	require(['jquery', 'jquery/ui'], function($){ 
		jQuery("div.pd-savetemplate").click(function(){
			var reloadurl = '<?php echo $this->getUrl('productdesigner/index/savetemplate'); ?>';
			var formkey = '<?php echo $formKey; ?>';
			var password = '<?php echo $_GET['password']; ?>';
			var templateId = '<?php echo $_GET['template_id']; ?>';
			var productId = $("input#productid").val();
			
			var product = canvasdesigner.getProduct();
			var svg = canvasdesigner.getViewsSVG();
			var json = {};
			var images = {};
			$.each(canvasdesigner.viewInstances, function(index, view){
				var objects = view.stage.getObjects()
				view.elements = [];
				$.each(objects, function(index, object){
					var element = FPDUtil.parseFabricObjectToFPDElement(object);
					view.elements.push(element);
				});
				var label = view.title;
// 				json[label] = JSON.stringify(view.getJSON());
				json[label] = JSON.stringify(view);
				images[label] = view.stage.toDataURL();
			});
			console.log(images);

			new jQuery.ajax({
				type: "POST",
				url: reloadurl,
				dataType: "text",
				data: {isAjax: 1, 'form_key': formkey, json: json, images: images, svg: svg, 'product_id': productId, password: password, 'template_id': templateId },
				success: function(data) {
					alert(data);
				}
			});
		});
	});
</script>
<?php
	}
?>